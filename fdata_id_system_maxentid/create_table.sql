set hive.auto.convert.join=false;
set hive.exec.dynamic.partition=true;
set hive.exec.dynamic.partition.mode=nostrick;
set hive.exec.max.created.files=655350;
set hive.exec.max.dynamic.partitions.pernode=655350;
set hive.exec.max.dynamic.partitions=655350;
CREATE TABLE IF NOT EXISTS `id_system_maxentid`(
  `tid` string comment 'app_id',
  `pid` string comment 'channel id',
  `ref_id` string comment 'ref_id',
  `sub_pid` string comment 'sub channel id',
  `event_id` string comment 'event id',
  `maxent_id` string comment 'maxent id',
  `session_id` string comment 'session id',
  `ip` string comment 'ip',
  `os` string comment 'operate system',
  `device` string comment 'device type',
  `timestamp` string comment 'timestamp',
  `host` string comment 'tracking server host ip',
  `did` string comment 'did',
  `imei` string comment 'imei',
  `mac` string comment 'mac',
  `aid` string comment 'android id',
  `mcid` string comment 'mcid',
  `idfa` string comment 'idfa',
  `idfv` string comment 'idfv',
  `mxcookie` string comment 'mxcookie',
  `ckid` string comment 'ckid',
  `user_agent` string comment 'user_agent',
  `accept_charset` string comment 'accept_charset',
  `accept_encoding` string comment 'accept_encoding',
  `accept_language` string comment 'accept_language',
  `sdkversion` string comment 'sdk version',
  `cr` string comment 'operator',
  `ns` string comment 'network provider',
  `nssw` string comment 'network provider',
  `type` string comment 'event type',
  `typeclass` string comment 'event class',
  `inner_type` string comment 'client event type',
  `api_key` string comment 'app id',
  `user_id` string comment 'user id',
  `inner_session_id` string comment 'client session id',
  `tact` string comment 'act event type',
  `client_privileged` string comment 'client is privileged or not',
  `fields` string comment 'fields',
  `client_timestamp` string comment 'client timestamp',
  `compaign_id` string comment 'compaign id',
  `wscale` string comment 'wscale',
  `tcpts` string comment 'tcpts',
  `ttl` string comment 'ttl',
  `tcp_source_port` string comment 'tcp_source_port',
  `tcp_initial_window` string comment 'tcp_initial_window',
  `package_id` string comment 'package_id',
  `tick` string comment 'tick',
  `privileged` string comment 'is privileged',
  `platform` string comment 'platform')
PARTITIONED BY (day string, hour string);


use fdata;
insert overwrite table fdata.id_system_maxentid partition(day, hour)
select
get_json_object(json, '$.tid') as tid,
get_json_object(json, '$.pid') as pid,
get_json_object(json, '$.ref_id') as ref_id,
get_json_object(json, '$.sub_pid') as sub_pid,
get_json_object(json, '$.event_id') as event_id,
get_json_object(json, '$.maxent_id') as maxent_id,
get_json_object(json, '$.session_id') as session_id,
get_json_object(json, '$.ip') as ip,
get_json_object(json, '$.os') as os,
get_json_object(json, '$.device') as device,
get_json_object(json, '$.timestamp') as timestamp,
get_json_object(json, '$.host') as host,
get_json_object(json, '$.did') as did,
get_json_object(json, '$.did.imei') as imei,
get_json_object(json, '$.did.mac') as mac,
get_json_object(json, '$.did.aid') as aid,
get_json_object(json, '$.did.mcid') as mcid,
get_json_object(json, '$.did.idfa') as idfa,
get_json_object(json, '$.did.idfv') as idfv,
get_json_object(json, '$.did.mxcookie') as mxcookie,
get_json_object(json, '$.did.ckid') as ckid,
get_json_object(json, '$.user_agent') as user_agent,
get_json_object(json, '$.accept_charset') as accept_charset,
get_json_object(json, '$.accept_encoding') as accept_encoding,
get_json_object(json, '$.accept_language') as accept_language,
get_json_object(json, '$.sdkversion') as sdkversion,
get_json_object(json, '$.cr') as cr,
get_json_object(json, '$.ns') as ns,
get_json_object(json, '$.nssw') as nssw,
get_json_object(json, '$.type') as `type`,
get_json_object(json, '$.typeclass') as typeclass,
get_json_object(json, '$.message.__type') as inner_type,
get_json_object(json, '$.message.__api_key') as api_key,
get_json_object(json, '$.message.__user_id') as user_id,
get_json_object(json, '$.message.__session_id') as inner_session_id,
get_json_object(json, '$.message.__tact') as tact,
get_json_object(json, '$.message.__privileged') as client_privileged,
get_json_object(json, '$.message.__fields') as fields,
get_json_object(json, '$.message.__timestamp') as client_timestamp,
get_json_object(json, '$.campaign_id') as compaign_id,
get_json_object(json, '$.wscale') as wscale,
get_json_object(json, '$.tcpts') as tcpts,
get_json_object(json, '$.ttl') as ttl,
get_json_object(json, '$.tcp_source_port') as tcp_source_port,
get_json_object(json, '$.tcp_initial_window') as tcp_initial_window,
get_json_object(json, '$.package_id') as package_id,
get_json_object(json, '$.tick') as tick,
get_json_object(json, '$.privileged') as privileged,
get_json_object(json, '$.platform') as platform,
`day` as `day`,
`hour` as `hour`
from odata.id_system_maxentid
where day >= 20170101;
